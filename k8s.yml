apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-api
  labels:
    app: model-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: model-api
  template:
    metadata:
      labels:
        app: model-api
    spec:
      containers:
      - name: model-api
        image: ghcr.io/julianbiesheuvel/remla_so-service:latest
        #imagePullPolicy: Always
        ports:
        - containerPort: 8080
      imagePullSecrets:
        - name: ghcr-pat
---
apiVersion: v1
kind: Service
metadata:
  name: model-svc
  labels:
    app: model-svc
spec:
  selector:
    app: model-api
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: model-monitor
  labels:
    # release matches helm install name for the kube-prometheus-stack
    release: promstack
spec:
  selector:
    matchLabels:
      app: model-svc
  endpoints:
  - targetPort: 8080
    path: "/metrics"
    interval: 1s
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: model-ingress
spec:
  defaultBackend:
    service:
      name: model-svc
      port:
        number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scraper
  labels:
    app: scraper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scraper
  template:
    metadata:
      labels:
        app: scraper
    spec:
      containers:
        - name: scraper
          image: ghcr.io/julianbiesheuvel/remla_so-scraper:latest
          # imagePullPolicy: Always
          ports:
            - containerPort: 9000
          env:
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-host
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-port
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-db
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-user
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pg-secrets
                  key: password
      imagePullSecrets:
        - name: ghcr-pat
---
apiVersion: v1
kind: Service
metadata:
  name: scraper-svc
  labels:
    app: scraper-svc
spec:
  selector:
    app: scraper
  ports:
    - port: 9000
      targetPort: 9000
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: scraper-monitor
  labels:
    # release matches helm install name for the kube-prometheus-stack
    release: promstack
spec:
  selector:
    matchLabels:
      app: scraper-svc
  endpoints:
  - targetPort: 9000
    path: "/metrics"
    interval: 30s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drift-monitor
  labels:
    app: drift-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drift-monitor
  template:
    metadata:
      labels:
        app: drift-monitor
    spec:
      containers:
        - name: drift-monitor
          image: ghcr.io/julianbiesheuvel/remla_so-drift-monitor:latest
          # imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-host
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-port
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-db
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-user
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pg-secrets
                  key: password
      imagePullSecrets:
        - name: ghcr-pat
---
apiVersion: v1
kind: Service
metadata:
  name: drift-monitor-svc
  labels:
    app: drift-monitor-svc
spec:
  selector:
    app: drift-monitor
  ports:
    - port: 8080
      targetPort: 4444
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: drift-monitor-monitor
  labels:
    # release matches helm install name for the kube-prometheus-stack
    release: promstack
spec:
  selector:
    matchLabels:
      app: drift-monitor-svc
  endpoints:
  - targetPort: 4444
    path: "/metrics"
    interval: 30s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: so-agent
  labels:
    app: so-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: so-agent
  template:
    metadata:
      labels:
        app: so-agent
    spec:
      containers:
        - name: so-agent
          image: ghcr.io/julianbiesheuvel/remla_so-so-agent:latest
          # imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-host
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-port
            - name: PGDATABASE
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-db
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: pg-user
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pg-secrets
                  key: password
      imagePullSecrets:
        - name: ghcr-pat
---
apiVersion: v1
kind: Service
metadata:
  name: so-agent-svc
  labels:
    app: so-agent-svc
spec:
  selector:
    app: so-agent
  ports:
    - port: 8080
      targetPort: 7000
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: so-agent-monitor
  labels:
    # release matches helm install name for the kube-prometheus-stack
    release: promstack
spec:
  selector:
    matchLabels:
      app: so-agent-svc
  endpoints:
  - targetPort: 7000
    path: "/metrics"
    interval: 30s
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-config
data:
  # k8s magic # postgres-postgresql.default.svc.cluster.local
  pg-host: postgres-postgresql
  pg-port: "5432"
  pg-user: remla
  pg-db: remla
---
# Note that bitnami/postgresql would generate its own secret every time,
# but a) to be explicit and b) to avoid the PVC and kubectl values to be out of sync
# the database secrets are set here
apiVersion: v1
kind: Secret
metadata:
  name: pg-secrets
data:
  password: aHVudGVyMg==
  postgres-password: YWRtaW4=
  replication-password: MTIzNDU2Nzg=
